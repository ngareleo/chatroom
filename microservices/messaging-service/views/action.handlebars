<div class="container">
    <div class="logo-container">
        <img src="images/sociallyKay-logos_white(1).png" class="logo" width="125" height="30">
    </div>
    <div class= "header">
        <div class="user-profile">
            <div class="icon">
                <img src={{profile}} width="130" height="130">
            </div>
            <div class="name">
                <p>{{username}}</p>
            </div>
            <div class="status">
                <p id="status">Offline</p>
            </div>
        </div>
    </div>
    <div class="chat-container">
        <!--Chats go here
        <div class="message">
            <p>Hey douchebag, hows it going</p>
        </div> 
        <div class="message user_message">
            <p>Hey cunt</p>
        </div>-->
    </div>
    <div class="footer">
        <form action="/{{user}}" method="post" id="form">
            <input type="text" name="chat" id="chat">
            <button id="send-button">Send</button>
        </form>
    </div>  
</div>
<script src="/socket.io/socket.io.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>

    var socket = io();
    const chatContainer = document.querySelector(".chat-container");
    const sendButton = document.querySelector("#send-button");
    const currentUser = (document.location.pathname === "/user1") ? "user1" : "user2";
    const form = document.querySelector("#form");
    const removeAllChildNodes = (parent) => {
        while (parent.firstChild) {
            parent.removeChild(parent.firstChild);
        }
    }
    
    
    socket.on("data", (data) => {
        removeAllChildNodes(chatContainer);
        for (var item of data) {
            if (item.user === currentUser) {
                const child = document.createElement("div");
                child.setAttribute("class", "message user_message");
                const pChild = document.createElement("p");
                pChild.innerHTML = item.content;
                child.appendChild(pChild);
                chatContainer.appendChild(child);

            }else {
                const child = document.createElement("div");
                child.setAttribute("class", "message");
                const pChild = document.createElement("p");
                pChild.innerHTML = item.content;
                child.appendChild(pChild);
                chatContainer.appendChild(child);
            }
        }        
    });

    socket.on("user-information", () => {
        socket.emit("user-info", document.location);
    });

    socket.on("u1-offline", () => {
        if (document.location.pathname === "/user2")
            document.querySelector("#status").innerHTML = "Offline";
    });

    socket.on("u2-offline", () => {
        if (document.location.pathname === "/user1")
            document.querySelector("#status").innerHTML = "Offline";
    });

    socket.on("u1-online", () => {
        if (document.location.pathname === "/user2")
            document.querySelector("#status").innerHTML = "Online";
    });

    socket.on("u2-online", () => {
        if (document.location.pathname === "/user1")
            document.querySelector("#status").innerHTML = "Online";
    });
    
    /*
        Events
    */
    sendButton.addEventListener("click", (event) => {
        event.preventDefault();
        axios.post(document.location.pathname, {
            content: document.querySelector("#chat").value,}
        ).then((res) => {
            if (res.data.message == "OK"){
                socket.emit("message-sent", "Message sent");
                form.reset();
            }
        }).catch((err) => {
            console.log(err);
        });
    });

</script>
